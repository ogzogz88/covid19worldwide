[{"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\App.js":"1","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\reportWebVitals.js":"2","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\InfoBox.js":"3","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\index.js":"4","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\Map.js":"5","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\ShowDataOnMap.js":"6","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\header\\SideDrawer.js":"7","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\header\\Header.js":"8","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\linechart\\LineChart.js":"9","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\tables\\Tables.js":"10","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\main\\Main.js":"11","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\context\\AppProvider.js":"12","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\selector\\Selector.js":"13","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\linechart\\LineGraph.js":"14","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\tables\\TableItem.js":"15"},{"size":691,"mtime":1607457032326,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1606748879250,"results":"18","hashOfConfig":"17"},{"size":1876,"mtime":1607552538731,"results":"19","hashOfConfig":"17"},{"size":500,"mtime":1606748879250,"results":"20","hashOfConfig":"17"},{"size":1238,"mtime":1607623848234,"results":"21","hashOfConfig":"17"},{"size":1146,"mtime":1607269260446,"results":"22","hashOfConfig":"17"},{"size":2229,"mtime":1607548537632,"results":"23","hashOfConfig":"17"},{"size":2486,"mtime":1607623741561,"results":"24","hashOfConfig":"17"},{"size":4877,"mtime":1607621865826,"results":"25","hashOfConfig":"17"},{"size":2850,"mtime":1607622704510,"results":"26","hashOfConfig":"17"},{"size":6674,"mtime":1607541822544,"results":"27","hashOfConfig":"17"},{"size":2992,"mtime":1607623313881,"results":"28","hashOfConfig":"17"},{"size":1296,"mtime":1607549183308,"results":"29","hashOfConfig":"17"},{"size":4256,"mtime":1607553964466,"results":"30","hashOfConfig":"17"},{"size":1253,"mtime":1607623599599,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16nbn64",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\App.js",[],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\reportWebVitals.js",[],["65","66"],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\InfoBox.js",[],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\index.js",[],["67","68"],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\Map.js",[],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\ShowDataOnMap.js",[],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\header\\SideDrawer.js",[],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\header\\Header.js",[],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\linechart\\LineChart.js",[],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\tables\\Tables.js",[],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\main\\Main.js",["69","70","71","72","73","74"],"import React, { useState, useEffect } from 'react'\r\nimport { FormControl, InputLabel, Select, MenuItem, Card, CardContent, Container } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport './Main.css'\r\nimport InfoBox from '../InfoBox'\r\nimport Map from '../Map'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport AppContext from '../../context/AppContext'\r\n\r\nfunction Main() {\r\n\r\n    const [mapCountries, setMapCountries] = useState([]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getCountriesData = async () => {\r\n            await axios.get('https://disease.sh/v3/covid-19/countries')\r\n                .then(response => response.data)\r\n                .then(data => {\r\n\r\n\r\n                    setMapCountries(data);\r\n                });\r\n        }\r\n        getCountriesData();\r\n\r\n    }, []);\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"app__container\">\r\n                <Container maxWidth=\"lg\" >\r\n                    {/* <div className=\"app__header\">\r\n                    <h1 className=\"app__title\"><span className=\"app__covid\">Covid19</span>info</h1>\r\n                    <img className=\"app__flag\" src={countryInfo?.countryInfo?.flag ?? \"assets/worldFlag.png\"} alt=\"\" />\r\n                    <FormControl className=\"app__dropdown\">\r\n                        <InputLabel id=\"covid-countries\">Select</InputLabel>\r\n                        <Select\r\n                            variant=\"outlined\"\r\n                            labelId=\"covid-countries\"\r\n                            id=\"covid-countries-select\"\r\n                            value={countryName}\r\n                            onChange={handleChange}\r\n                            label=\"Country\"\r\n                        >\r\n                            <MenuItem id={1000} value=\"worldwide\">\r\n                                <em>Worldwide</em>\r\n                            </MenuItem>\r\n                            {countries.length > 0 &&\r\n                                countries.map((country) => {\r\n                                    return (\r\n                                        <MenuItem key={country.id} value={country.name}>{country.name}</MenuItem>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                </div> */}\r\n\r\n                    <div className=\"app__stats\">\r\n\r\n                        <div className=\"infoBox\">\r\n                            <AppContext.Consumer>\r\n                                {context => (\r\n                                    <InfoBox\r\n                                        clicked={\"cases\" === context.dataType}\r\n                                        onClick={e => context.setDataType(\"cases\")}\r\n                                        img={'assets/caseImg.png'}\r\n                                        title={\"Cases\"}\r\n                                        caseTitle={\"Daily Number\"}\r\n                                        totalTitle={\"Total Number\"}\r\n                                        casesNumber={context.countryInfo.todayCases ? context.countryInfo.todayCases.toLocaleString() : ''}\r\n                                        totalNumber={context.countryInfo.cases ? context.countryInfo.cases.toLocaleString() : ''}\r\n\r\n                                    />\r\n\r\n                                )}\r\n                            </AppContext.Consumer>\r\n                        </div>\r\n                        <div className=\"infoBox\">\r\n                            <AppContext.Consumer>\r\n                                {context => (\r\n                                    <InfoBox\r\n                                        clicked={\"recovered\" === context.dataType}\r\n                                        onClick={e => context.setDataType(\"recovered\")}\r\n                                        img={'assets/recovered.png'}\r\n                                        title={\"Recovered\"}\r\n                                        caseTitle={\"Daily Number\"}\r\n                                        totalTitle={\"Total Number\"}\r\n                                        casesNumber={context.countryInfo.todayRecovered ? context.countryInfo.todayRecovered.toLocaleString() : ''}\r\n                                        totalNumber={context.countryInfo.recovered ? context.countryInfo.recovered.toLocaleString() : ''}\r\n                                    />\r\n\r\n                                )}\r\n                            </AppContext.Consumer>\r\n                        </div>\r\n                        <div className=\"infoBox\">\r\n                            <AppContext.Consumer>\r\n                                {context => (\r\n                                    <InfoBox\r\n                                        clicked={\"deaths\" === context.dataType}\r\n                                        onClick={e => context.setDataType(\"deaths\")}\r\n                                        img={'assets/death.png'}\r\n                                        title={\"Deaths\"}\r\n                                        caseTitle={\"Daily Number\"}\r\n                                        totalTitle={\"Total Number\"}\r\n                                        casesNumber={context.countryInfo.todayDeaths ? context.countryInfo.todayDeaths.toLocaleString() : ''}\r\n                                        totalNumber={context.countryInfo.deaths ? context.countryInfo.deaths.toLocaleString() : ''}\r\n                                    />\r\n\r\n                                )}\r\n                            </AppContext.Consumer>\r\n                        </div>\r\n                    </div>\r\n                    <AppContext.Consumer>\r\n                        {context => (\r\n                            <Map\r\n                                center={context.mapCenter}\r\n                                zoom={context.mapZoom}\r\n                                countries={mapCountries}\r\n                                dataType={context.dataType}\r\n                            />\r\n                        )}\r\n                    </AppContext.Consumer>\r\n                </Container>\r\n            </div>\r\n            {/* <div className=\"app__right\">\r\n                <Card style={{ borderTop: \"5px solid #9090ff\" }}>\r\n                    <CardContent>\r\n                        <h3>Total Cases by Country</h3>\r\n                        <Table countries={tableData} />\r\n                        <h3>Worldwide Info For Last 4 Months</h3>\r\n                        <LineGraph dataType={dataType} />\r\n                    </CardContent>\r\n                </Card>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\context\\AppProvider.js",[],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\selector\\Selector.js",[],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\linechart\\LineGraph.js",[],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\tables\\TableItem.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"75","replacedBy":"79"},{"ruleId":"77","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":21},{"ruleId":"81","severity":1,"message":"85","line":2,"column":23,"nodeType":"83","messageId":"84","endLine":2,"endColumn":33},{"ruleId":"81","severity":1,"message":"86","line":2,"column":35,"nodeType":"83","messageId":"84","endLine":2,"endColumn":41},{"ruleId":"81","severity":1,"message":"87","line":2,"column":43,"nodeType":"83","messageId":"84","endLine":2,"endColumn":51},{"ruleId":"81","severity":1,"message":"88","line":2,"column":53,"nodeType":"83","messageId":"84","endLine":2,"endColumn":57},{"ruleId":"81","severity":1,"message":"89","line":2,"column":59,"nodeType":"83","messageId":"84","endLine":2,"endColumn":70},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],["90"],["91"],"no-unused-vars","'FormControl' is defined but never used.","Identifier","unusedVar","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","no-global-assign","no-unsafe-negation"]