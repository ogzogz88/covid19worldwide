[{"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\App.js":"1","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\reportWebVitals.js":"2","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\InfoBox.js":"3","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\index.js":"4","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\Map.js":"5","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\Table.js":"6","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\ShowDataOnMap.js":"7","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\header\\SideDrawer.js":"8","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\header\\Header.js":"9","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\linechart\\LineChart.js":"10","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\tables\\Tables.js":"11","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\main\\Main.js":"12","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\context\\AppProvider.js":"13","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\selector\\Selector.js":"14","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\linechart\\LineGraph.js":"15"},{"size":691,"mtime":1607457032326,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1606748879250,"results":"18","hashOfConfig":"17"},{"size":1850,"mtime":1607268384505,"results":"19","hashOfConfig":"17"},{"size":500,"mtime":1606748879250,"results":"20","hashOfConfig":"17"},{"size":1239,"mtime":1607138544286,"results":"21","hashOfConfig":"17"},{"size":959,"mtime":1607035731211,"results":"22","hashOfConfig":"17"},{"size":1146,"mtime":1607269260446,"results":"23","hashOfConfig":"17"},{"size":2174,"mtime":1607433290013,"results":"24","hashOfConfig":"17"},{"size":2471,"mtime":1607462669393,"results":"25","hashOfConfig":"17"},{"size":1947,"mtime":1607533177195,"results":"26","hashOfConfig":"17"},{"size":1476,"mtime":1607457455928,"results":"27","hashOfConfig":"17"},{"size":8163,"mtime":1607462542847,"results":"28","hashOfConfig":"17"},{"size":2633,"mtime":1607461818267,"results":"29","hashOfConfig":"17"},{"size":1291,"mtime":1607531172574,"results":"30","hashOfConfig":"17"},{"size":4224,"mtime":1607533325855,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16nbn64",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\App.js",[],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\reportWebVitals.js",[],["68","69"],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\InfoBox.js",[],["70","71"],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\index.js",[],["72","73"],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\Map.js",[],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\Table.js",[],["74","75"],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\ShowDataOnMap.js",[],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\header\\SideDrawer.js",[],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\header\\Header.js",["76","77","78","79"],"import React from \"react\";\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Container,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Hidden,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\"\r\nimport SideDrawer from \"./SideDrawer\"\r\nimport Selector from '../selector/Selector'\r\n\r\nconst useStyles = makeStyles({\r\n    navbarDisplayFlex: {\r\n        display: `flex`,\r\n        justifyContent: `space-between`\r\n    },\r\n    navDisplayFlex: {\r\n        display: `flex`,\r\n        justifyContent: `space-between`\r\n    },\r\n    linkText: {\r\n        textDecoration: `none`,\r\n        textTransform: `uppercase`,\r\n        color: `white`\r\n    }\r\n});\r\n\r\nconst navLinks = [\r\n    { title: `linecharts`, path: `/linecharts` },\r\n    { title: `tables`, path: `/tables` },\r\n];\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Container maxWidth=\"xlg\" className={classes.navbarDisplayFlex}>\r\n                    <List className=\"app__title\">\r\n                        <a href={'/'} key={'covid19ww'} className={classes.linkText}>\r\n                            <ListItem button>\r\n                                <ListItemText primary={'covid19ww'} />\r\n                            </ListItem>\r\n                        </a>\r\n                    </List>\r\n                    <Hidden xsDown>\r\n                        <List\r\n                            component=\"nav\"\r\n                            aria-labelledby=\"main navigation\"\r\n                            className={classes.navDisplayFlex}\r\n                        >\r\n                            {navLinks.map(({ title, path }) => (\r\n                                <a href={path} key={title} className={classes.linkText}>\r\n                                    <ListItem button>\r\n                                        <ListItemText primary={title} />\r\n                                    </ListItem>\r\n                                </a>\r\n                            ))}\r\n\r\n                            <Selector />\r\n                        </List>\r\n                    </Hidden>\r\n\r\n\r\n                    <Hidden smUp>\r\n                        <Selector />\r\n                        <SideDrawer navLinks={navLinks} />\r\n                    </Hidden>\r\n                </Container>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\linechart\\LineChart.js",[],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\tables\\Tables.js",[],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\main\\Main.js",["80","81","82","83","84","85","86","87","88","89","90","91","92"],"import React, { useState, useEffect } from 'react'\r\nimport { FormControl, InputLabel, Select, MenuItem, Card, CardContent } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport './Main.css'\r\nimport InfoBox from '../InfoBox'\r\nimport Map from '../Map'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport AppContext from '../../context/AppContext'\r\n\r\nfunction Main() {\r\n    const [countries, setCountries] = useState([]);\r\n    const [countryName, setCountryName] = useState('worldwide');\r\n    const [countryInfo, setCountryInfo] = useState({});\r\n    const [mapCenter, setMapCenter] = useState({ lat: 34, lng: -40 });\r\n    const [mapZoom, setMapZoom] = useState(3);\r\n    const [mapCountries, setMapCountries] = useState([]);\r\n    const [dataType, setDataType] = useState(\"cases\");\r\n\r\n    const handleChange = async (e) => {\r\n        const countryName = e.target.value;\r\n        const URL = countryName === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" :\r\n            `https://disease.sh/v3/covid-19/countries/${countryName}`;\r\n        await axios.get(URL)\r\n            .then(response => response.data)\r\n            .then(data => {\r\n                setCountryName(countryName);\r\n                setCountryInfo(data);\r\n\r\n                if (countryName === 'worldwide') {\r\n                    setMapCenter({ lat: 34, lng: -40 });\r\n                    setMapZoom(2);\r\n                    return;\r\n                }\r\n                setMapCenter({ lat: data.countryInfo.lat, lng: data.countryInfo.long });\r\n                console.log(\"positionstate\");\r\n                console.log(mapCenter);\r\n                setMapZoom(6);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getCountriesData = async () => {\r\n            await axios.get('https://disease.sh/v3/covid-19/countries')\r\n                .then(response => response.data)\r\n                .then(data => {\r\n                    let idNumber = 0;\r\n                    const countries = data.map(element => ({\r\n                        name: element.country,\r\n                        value: element.countryInfo.iso2,\r\n                        id: idNumber++\r\n                    }));\r\n                    setCountries(countries);\r\n                    setMapCountries(data);\r\n                });\r\n        }\r\n        getCountriesData();\r\n\r\n        const getWorldInfo = async () => {\r\n            await axios.get(\"https://disease.sh/v3/covid-19/all\")\r\n                .then(response => response.data)\r\n                .then(data => {\r\n                    setCountryInfo(data);\r\n                });\r\n        }\r\n        getWorldInfo();\r\n    }, []);\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"app__left\">\r\n                {/* <div className=\"app__header\">\r\n                    <h1 className=\"app__title\"><span className=\"app__covid\">Covid19</span>info</h1>\r\n                    <img className=\"app__flag\" src={countryInfo?.countryInfo?.flag ?? \"assets/worldFlag.png\"} alt=\"\" />\r\n                    <FormControl className=\"app__dropdown\">\r\n                        <InputLabel id=\"covid-countries\">Select</InputLabel>\r\n                        <Select\r\n                            variant=\"outlined\"\r\n                            labelId=\"covid-countries\"\r\n                            id=\"covid-countries-select\"\r\n                            value={countryName}\r\n                            onChange={handleChange}\r\n                            label=\"Country\"\r\n                        >\r\n                            <MenuItem id={1000} value=\"worldwide\">\r\n                                <em>Worldwide</em>\r\n                            </MenuItem>\r\n                            {countries.length > 0 &&\r\n                                countries.map((country) => {\r\n                                    return (\r\n                                        <MenuItem key={country.id} value={country.name}>{country.name}</MenuItem>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                </div> */}\r\n\r\n                <div className=\"app__stats\">\r\n\r\n                    <div className=\"infoBox\">\r\n                        <AppContext.Consumer>\r\n                            {context => (\r\n                                <InfoBox\r\n                                    clicked={\"cases\" === context.dataType}\r\n                                    onClick={e => context.setDataType(\"cases\")}\r\n                                    img={'assets/caseImg.png'}\r\n                                    title={\"Cases\"}\r\n                                    caseTitle={\"Daily Number\"}\r\n                                    totalTitle={\"Total Number\"}\r\n                                    casesNumber={context.countryInfo.todayCases ? context.countryInfo.todayCases.toLocaleString() : ''}\r\n                                    totalNumber={context.countryInfo.cases ? context.countryInfo.cases.toLocaleString() : ''}\r\n\r\n                                />\r\n\r\n                            )}\r\n                        </AppContext.Consumer>\r\n                    </div>\r\n                    <div className=\"infoBox\">\r\n                        <AppContext.Consumer>\r\n                            {context => (\r\n                                <InfoBox\r\n                                    clicked={\"recovered\" === context.dataType}\r\n                                    onClick={e => context.setDataType(\"recovered\")}\r\n                                    img={'assets/recovered.png'}\r\n                                    title={\"Recovered\"}\r\n                                    caseTitle={\"Daily Number\"}\r\n                                    totalTitle={\"Total Number\"}\r\n                                    casesNumber={context.countryInfo.todayRecovered ? context.countryInfo.todayRecovered.toLocaleString() : ''}\r\n                                    totalNumber={context.countryInfo.recovered ? context.countryInfo.recovered.toLocaleString() : ''}\r\n                                />\r\n\r\n                            )}\r\n                        </AppContext.Consumer>\r\n                    </div>\r\n                    <div className=\"infoBox\">\r\n                        <AppContext.Consumer>\r\n                            {context => (\r\n                                <InfoBox\r\n                                    clicked={\"deaths\" === context.dataType}\r\n                                    onClick={e => context.setDataType(\"deaths\")}\r\n                                    img={'assets/death.png'}\r\n                                    title={\"Deaths\"}\r\n                                    caseTitle={\"Daily Number\"}\r\n                                    totalTitle={\"Total Number\"}\r\n                                    casesNumber={context.countryInfo.todayDeaths ? context.countryInfo.todayDeaths.toLocaleString() : ''}\r\n                                    totalNumber={context.countryInfo.deaths ? context.countryInfo.deaths.toLocaleString() : ''}\r\n                                />\r\n\r\n                            )}\r\n                        </AppContext.Consumer>\r\n                    </div>\r\n                </div>\r\n                <AppContext.Consumer>\r\n                    {context => (\r\n                        <Map\r\n                            center={context.mapCenter}\r\n                            zoom={context.mapZoom}\r\n                            countries={mapCountries}\r\n                            dataType={context.dataType}\r\n                        />\r\n                    )}\r\n                </AppContext.Consumer>\r\n            </div>\r\n            {/* <div className=\"app__right\">\r\n                <Card style={{ borderTop: \"5px solid #9090ff\" }}>\r\n                    <CardContent>\r\n                        <h3>Total Cases by Country</h3>\r\n                        <Table countries={tableData} />\r\n                        <h3>Worldwide Info For Last 4 Months</h3>\r\n                        <LineGraph dataType={dataType} />\r\n                    </CardContent>\r\n                </Card>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\context\\AppProvider.js",[],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\selector\\Selector.js",[],"C:\\Users\\oguzh\\Desktop\\courses\\youtube\\covid19Tracker\\covid19tracker\\src\\components\\linechart\\LineGraph.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"95","replacedBy":"98"},{"ruleId":"93","replacedBy":"99"},{"ruleId":"95","replacedBy":"100"},{"ruleId":"93","replacedBy":"101"},{"ruleId":"95","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":10,"column":5,"nodeType":"105","messageId":"106","endLine":10,"endColumn":16},{"ruleId":"103","severity":1,"message":"107","line":11,"column":5,"nodeType":"105","messageId":"106","endLine":11,"endColumn":15},{"ruleId":"103","severity":1,"message":"108","line":12,"column":5,"nodeType":"105","messageId":"106","endLine":12,"endColumn":11},{"ruleId":"103","severity":1,"message":"109","line":13,"column":5,"nodeType":"105","messageId":"106","endLine":13,"endColumn":13},{"ruleId":"103","severity":1,"message":"104","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":21},{"ruleId":"103","severity":1,"message":"107","line":2,"column":23,"nodeType":"105","messageId":"106","endLine":2,"endColumn":33},{"ruleId":"103","severity":1,"message":"108","line":2,"column":35,"nodeType":"105","messageId":"106","endLine":2,"endColumn":41},{"ruleId":"103","severity":1,"message":"109","line":2,"column":43,"nodeType":"105","messageId":"106","endLine":2,"endColumn":51},{"ruleId":"103","severity":1,"message":"110","line":2,"column":53,"nodeType":"105","messageId":"106","endLine":2,"endColumn":57},{"ruleId":"103","severity":1,"message":"111","line":2,"column":59,"nodeType":"105","messageId":"106","endLine":2,"endColumn":70},{"ruleId":"103","severity":1,"message":"112","line":11,"column":12,"nodeType":"105","messageId":"106","endLine":11,"endColumn":21},{"ruleId":"103","severity":1,"message":"113","line":12,"column":12,"nodeType":"105","messageId":"106","endLine":12,"endColumn":23},{"ruleId":"103","severity":1,"message":"114","line":13,"column":12,"nodeType":"105","messageId":"106","endLine":13,"endColumn":23},{"ruleId":"103","severity":1,"message":"115","line":15,"column":12,"nodeType":"105","messageId":"106","endLine":15,"endColumn":19},{"ruleId":"103","severity":1,"message":"116","line":17,"column":12,"nodeType":"105","messageId":"106","endLine":17,"endColumn":20},{"ruleId":"103","severity":1,"message":"117","line":17,"column":22,"nodeType":"105","messageId":"106","endLine":17,"endColumn":33},{"ruleId":"103","severity":1,"message":"118","line":19,"column":11,"nodeType":"105","messageId":"106","endLine":19,"endColumn":23},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],["119"],["120"],["119"],["120"],["119"],["120"],"no-unused-vars","'FormControl' is defined but never used.","Identifier","unusedVar","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'countries' is assigned a value but never used.","'countryName' is assigned a value but never used.","'countryInfo' is assigned a value but never used.","'mapZoom' is assigned a value but never used.","'dataType' is assigned a value but never used.","'setDataType' is assigned a value but never used.","'handleChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]